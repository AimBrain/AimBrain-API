## /v1/face/compare

> Download [face_compare_request_example_body.json](examples/api_v1/face_compare_request_example_body.json) and use:

```shell
python2 curl_hmac.py test secret POST /v1/face/compare \
    -f 'face_compare_request_example_body.json' -r
```

> Alternatively:

```shell
curl https://api.aimbrain.com:443/v1/face/compare \
    -H 'Content-Type: application/json' \
    -H 'X-aimbrain-apikey: test' \
    -H 'X-aimbrain-signature: NwMmSbjqwsq7Y4x4Src7qHnIFerMhUTWcFxqLuAbbwg=' \
    --data @face_compare_request_example_body.json
```

> Example response:

```shell
{
    "score":0.95256084,
    "liveliness1":0.05330102,
    "liveliness2":0.81412222
}
```

This endpoint compares two faces based on the AimFace Module.

<aside class="notice">
  Liveliness detection is performed only if videos are sent in `faces1`/`faces2` and works by detecting blinking. In case custom implementation is done instead of using the SDK, we recommend adding prompts for users to blink if liveliness detection is required.
</aside>

<aside class="notice">
No images are stored server-side for this request.
</aside>


### HTTP Request
`POST /v1/face/compare`

### Body

Parameter | Description
------------------------------|--------------------------------------
`faces1`<br><span class="label notice">required</span>|**array of strings**<br>List of base64 encoded images or videos containing user face. H.264 encoded videos and JPEG formats supported. 640x480 maximum resolution, 500kB maximum size. In case of video, no longer than 3 seconds.
`faces2`<br><span class="label notice">required</span>|**array of strings**<br>List of base64 encoded images or videos containing user face. H.264 encoded videos and JPEG formats supported. 640x480 maximum resolution, 500kB maximum size. In case of video, no longer than 3 seconds.

### HTTP Response
Status code: `200 OK`

Parameter | Description
------------------------------|--------------------------------------
`score`|**float**<br>Probability, expressed as float between (0..1), that the current user is the original / enrolled user.
`liveliness1`|**float**<br>Probability, expressed as float between (0..1), that the received video in `faces1` array represent a live person as opposed being still image. In case of images are sent in `faces1`, 0.0 is returned.
`liveliness2`|**float**<br>Probability, expressed as float between (0..1), that the received video in `faces2` array represent a live person as opposed being still image. In case of images are sent in `faces2`, 0.0 is returned.

### Errors

Please see [#errors](#errors) for description of errors and formatting.
